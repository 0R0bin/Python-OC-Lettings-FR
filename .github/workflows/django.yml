name: Django CI

on: push

jobs:

  # django-test-and-quality:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     max-parallel: 4
  #     matrix:
  #       python-version: [3.12.2]

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install Dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt
  #   - name: Run Tests
  #     env:
  #       SECRET_KEY: ${{ secrets.SECRET_KEY }}
  #       SENTRY_KEY_URL: ${{ secrets.SENTRY_KEY_URL }}
  #     run: |
  #       coverage run -m pytest ./oc_lettings_site
  #       coverage report
  #   - name: Run Quality
  #     env:
  #       SECRET_KEY: ${{ secrets.SECRET_KEY }}
  #       SENTRY_KEY_URL: ${{ secrets.SENTRY_KEY_URL }}
  #     run: |
  #       flake8 ./oc_lettings_site


  build-and-push-docker:
    runs-on: ubuntu-latest
    # needs: django-test-and-quality
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Login To DockerHub
        run: |
          docker login -u="${{ secrets.DOCKER_USERNAME }}" -p="${{ secrets.DOCKER_PASSWORD }}"
      - name: Build Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }} --platform=linux/amd64 --build-arg secret_key="${{ secrets.SECRET_KEY }}" --build-arg sentry_url=${{ secrets.SENTRY_KEY_URL }} .
      - name: Push Image
        run: |
          IMAGE_HASH=$(docker images --no-trunc --quiet | head -n 1)
          echo "IMAGE_HASH=$IMAGE_HASH"
          echo "IMAGE_HASH_WO_SHA=${IMAGE_HASH:7}"
          docker tag ${IMAGE_HASH:7} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:${IMAGE_HASH:7}


  deploy-render:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Send req to Render
        run: |
          sudo curl ${{ secrets.LINK_RENDER }}
