# name: Django CI

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:

#   django-test-and-quality:
#     runs-on: ubuntu-latest
#     strategy:
#       max-parallel: 4
#       matrix:
#         python-version: [3.12.2]

#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v5
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install Dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#     - name: Run Tests
#       env:
#         SECRET_KEY: ${{ secrets.SECRET_KEY }}
#         SENTRY_KEY_URL: ${{ secrets.SENTRY_KEY_URL }}
#       run: |
#         coverage run -m pytest ./oc_lettings_site
#         coverage report
#     - name: Run Quality
#       env:
#         SECRET_KEY: ${{ secrets.SECRET_KEY }}
#         SENTRY_KEY_URL: ${{ secrets.SENTRY_KEY_URL }}
#       run: |
#         flake8 ./oc_lettings_site


#   build-and-push-docker:
#     runs-on: ubuntu-latest
#     needs: django-test-and-quality
#     if: github.ref == 'refs/heads/production'
    
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v4
#       - name: Login To DockerHub
#         run: |
#           docker login -u="${{ secrets.DOCKER_USERNAME }}" -p="${{ secrets.DOCKER_PASSWORD }}"
#       - name: Build Image
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }} --platform=linux/amd64 --build-arg secret_key="${{ secrets.SECRET_KEY }}" --build-arg sentry_url=${{ secrets.SENTRY_KEY_URL }} .
#       - name: Push Image
#         run: |
#           docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:latest


#   deploy-render:
#     runs-on: ubuntu-latest
#     needs: build-and-push-docker
#     if: github.ref == 'refs/heads/production'
    
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v4
#       - name: Send req to Render
#         run: |
#           sudo curl ${{ secrets.LINK_RENDER }}


name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
